name: run-bot

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run bot script
        env:
          DTOKEN: ${{ secrets.DTOKEN }}
          GTOKEN: ${{ secrets.GTOKEN }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_CLIENT_ID: ${{ secrets.TWITTER_CLIENT_ID }}
          TWITTER_CLIENT_SECRET: ${{ secrets.TWITTER_CLIENT_SECRET }}
        run: python bot.py

      - name: Log bot execution
        run: |
          echo "import json, os" > log_bot.py
          echo "from datetime import datetime" >> log_bot.py
          echo "" >> log_bot.py
          echo "LOG_FILE = 'logs.json'" >> log_bot.py
          echo "MAX_LOG_ENTRIES = 5" >> log_bot.py
          echo "" >> log_bot.py
          echo "def log_bot_run(details):" >> log_bot.py
          echo "    logs = {}" >> log_bot.py
          echo "    if os.path.exists(LOG_FILE):" >> log_bot.py
          echo "        with open(LOG_FILE, 'r') as file:" >> log_bot.py
          echo "            logs = json.load(file)" >> log_bot.py
          echo "" >> log_bot.py
          echo "    if 'bot_logs' not in logs:" >> log_bot.py
          echo "        logs['bot_logs'] = []" >> log_bot.py
          echo "" >> log_bot.py
          echo "    logs['bot_logs'].append(details)" >> log_bot.py
          echo "" >> log_bot.py
          echo "    if len(logs['bot_logs']) > MAX_LOG_ENTRIES:" >> log_bot.py
          echo "        logs['bot_logs'] = logs['bot_logs'][-MAX_LOG_ENTRIES:]" >> log_bot.py
          echo "" >> log_bot.py
          echo "    with open(LOG_FILE, 'w') as file:" >> log_bot.py
          echo "        json.dump(logs, file, indent=4)" >> log_bot.py
          echo "" >> log_bot.py
          echo "log_details = {" >> log_bot.py
          echo "    'timestamp': datetime.now().isoformat()," >> log_bot.py
          echo "    'event': 'Bot execution'," >> log_bot.py
          echo "    'success': True," >> log_bot.py
          echo "    'details': {'info': 'Bot ran successfully'}" >> log_bot.py
          echo "}" >> log_bot.py
          echo "log_bot_run(log_details)" >> log_bot.py
          
          python log_bot.py
